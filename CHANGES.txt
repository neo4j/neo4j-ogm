2.1.0
--------------
o Added event listener management on SessionFactory.

2.1.0-M01
--------------
o Added support for spatial queries, composite attribute converters and Filter functions.
o Scala compatibility - support for @Labels without get/set. Fixes #236.
o Fixes failure to set Credentials when using Bolt protocol in URI. Fixes #235.
o Enable ClassPathScanner to scan embedded WAR/JAR files (Spring Boot, Tomcat, etc).
o Fix defects when mapping to and from fields and methods that use Generics. Fixes #186.
o Support for Indexes and Constraints. Fixes #243.
o Fix issue where calling session.save() after updating graph properties and relationships in one transaction did not save properties. Fixes #261.
o Enable support for High Availability in Embedded driver. Fixes #142.
o Don't ship neo dependencies with the OGM (#278).
o Additional comparison operators for Filters.
o Support querying by multiple relationship entities. Fixes #280.
o Added ability to load a sessionFactory without classpath scanning.


2.0.5
--------------
o Support scanning web archives for domain classes. Fixes #211.
o Support non-string annotation element types. Fixes #228
o Fixes issue where relationship entities were counted incorrectly.
o Correct rollback problem with RelationshipEntities. Fixes #351.
o Support read-only transactions.
o Fix Concurrent Modification Exception when save is followed deleteAll
o Refactor classes from neo4j-ogm-core org.neo4j.ogm.annotations to org.neo4j.ogm.entity.io
o Fixes an issue #209, where removal of labels fails in certain cases.
o Deprecate @Labels annotation in the org.neo4j.ogm.annotations package. It has been moved to org.neo4j.ogm.annotation
o Support for Neo4j Bolt Driver 1.0.5


2.0.4
--------------
o Adds support for event listeners
o Support for an @Labels annotation that allows dynamically applying/removing labels for an entity at runtime.
o Fixes issue where SortOrder did not take into account the actual node property name specified by @Property
o Fixes issue where properties of the node were updated if it was reloaded after having been already mapped in the session

2.0.3
--------------
o Corrects behaviour of dirty checks on load and save
o Fixes issue where converters that use generics and convert to collections or arrays throw ClassNotFoundExceptions
o Fixes issue where the embedded driver would create a directory that included the uri scheme
o Fixes issue where ClassInfo to be accessed concurrently with some fields not having been initialised.

2.0.2
--------------
o Fixes issue where collections of relationships were not loaded correctly when they share the same relationship type but different target entities
o Fixes issue where enums not scanned were not assigned default converters
o Fixes issue where session.query() would not map String[] properties to Collection<String> on a domain entity
o Performance improvements for the graph to entity mapping process
o Provide support for detaching/clearing individual node and relationship entities from the session
o Fixes issue where a collection of Longs in a entity was mapped as a collection of Integers
o Fixes issue where collection of values returned via a custom Cypher query sometimes mapped to an ArrayList. Now it consistently maps to an array.
o Fixes issue where a node without a label or labels not mapped in the OGM result in a NullPointerException when queried via a custom Cypher query
o Support for Neo4j 3.0.0 and the Bolt Java Driver 1.0

2.0.1
--------------
o Initial support for the Bolt Driver and Neo4j 3.0 M5
o Fixes around configuration being autocloseable, TransactionManager issues,
o ConnectionException thrown instead of ResultProcessingException when a connection could not be obtained to Neo4j

2.0.0-M4
--------------
o Fixes issue where an updating an entity with a null property did not remove the property and the original value was retained
o Fixes issue where a char[] and boxed primitive array (embedded driver only) properties on a node could not be mapped to the entity

2.0.0-M3
--------------
o Fixes issue where an array property of an entity would not be saved to the graph correctly if the contents of the array were modified.
o Provides support for handling non-standard resource protocols like 'vfs:'
o Improvements and bug fixes to http connection handling and connection pooling
o The reason for a Cypher statement or query failing is made available and is consistent across drivers. org.neo4j.ogm.exception.CypherException contains the error code and message.
o Drivers extracted into separate modules and dependencies
o Fixes issue where incoming relationships not navigable in the other direction could not be deleted
o Each driver moved to a separate module
o Fixes issue where a user managed transaction would be committed when saving an entity that required multiple Cypher requests
o Fixes issue where an undirected relationship was sometimes not deleted correctly

2.0.0-M2
--------------
o Fixes issue where the number of entities returned in a page is incorrect if related entities of the same type are mapped
o Fixes issue where the result of loading relationship entities with a custom load depth was incorrect. Furthermore, default load depth 1 for a relationship entity will now correctly load it's start and end nodes to depth 1.
o Support for collections of entities of type SortedSet, backed by a TreeSet
o A missing type attribute on a @RelationshipEntity will now result in a compile time error
o Fixes issue where registering an entity type and purging entities from the session were dependent on the equals() implementation of the entity
o Fixes issue where literal maps returned in custom cypher queries could not be parsed
o Fixes issue where saving a collection of entities would save each entity in a separate request and transaction. After this fix, they will be saved in the same transaction, with as few requests as possible

2.0.0-M1
--------------
o Support mapping of custom query results to domain entities
o Upgrade to Neo4j 2.3.2
o Retry http requests in the event of NoHttpResponseException
o Converters using parametrized types now work correctly
o Fixes http-client connection leak when request returns a 300/400/500 response code
o Performance improvements when
  - creating, updating and deleting nodes
  - creating, updating and deleting relationships and relationship entities
o All create, update and delete Cypher queries are cacheable
o Detect use of wildcards on generics and fail with appropriate message
o Support for Neo4j Embedded
o Split into modules for drivers, api, core, compiler and test
